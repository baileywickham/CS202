
Congratulations!  You've successfully accessed the class materials.
If all went well, you did this by accepting the assignment
at https://classroom.github.com/a/Bzc7SQMw , and following the
directions in the README file there.

Now that you've done that, there are some more steps to get set
up...


    *  Clone the repository that's used for getting grades and other
       feedback.  To do this, cd to the directory you created for this 
       class (the parent directory of "materials").  Accept the
       assignment at https://classroom.github.com/a/-ayIaI-e .
       Go to https://github.com/CalPolyCPE203-W19 , and click on
       "feedback-XXX", where "XXX" is your github ID.  Click "clone
       or download," and copy the clone link.  In your class directory,
       type "git clone <the link from the web page>".

    *  In your turnin-xxx directory, create a directory called
       setup, then make a text file called "setup/email.txt" with
       your @calpoly.edu e-mail address (e.g.  iamgroot@calpoly.edu), and a
       text file called "setup/name.txt" with your name, exactly as it
       appears in PolyLearn.  Each file should be exactly one line long.
       Check in your turn-in repository ("git add .", "git commit",
       "git push" -- see git_commands.txt).

    *  Get an ssh client set up on your computer so you can connect to
       the Unix servers.  This is the same process as in the pre-requisites
       to CSC 203, so it should be familiar to most.  In case this is new,
       though, you can use a program called "ssh" to open a terminal session
       on one of Cal Poly's Unix servers.  Their addrresses are
       unix1.csc.calpoly.edu through unix5.csc.calpoly.edu.  From Mac or
       Linux, you should be able to type "ssh you@unix4.csc.calpoly.edu", for
       example, from the command line.  Replace "you" with your login name.
       On Windows, you might need to install an ssh client first.  One that's 
       widely used is called putty, available from https://putty.org/ .

    *  Make sure you've set up your account on the Unix server for 
       CSC 203.  You'll need this to run the "checkgit" command when
       you turn in assignments.  To set yourself up, edit the file 
       ".mybashrc" to include the following:

            source /home/wffoote/public/set_env_203

       You can use the pico editor to do this by typing "pico .mybashrc".
       Log out, and log back in.  You can check that it's set up
       by typing "checkgit" - you should get back a "usage" message
       for the command.  The help message you get explains other useful
       features of checkgit.

       Note that ".mybashrc" is a file set up by the Cal Poly systems
       administrators.  In rare instances, some students didn't have this
       set up.  If the above didn't work, try adding the above line to
       your .bashrc file.  If that doesn't work, try .profile, or perhaps
       even .bash_profile.

       A final word on checkgit:  checkgit is just a tool to check your 
       submission, *after* you have your program working.  Before submitting 
       your code and checking with checkgit, you should make your program
       work using the normal tools!

    *  Set up an environment variable called "MATERIALS_DIR_203" with the
       path of the directory where you checked out the materials git repository.
       This environment variable is used to locate libraries used in the labs
       and the class project.  For example, if you checkt out the materials
       repository to the directory csc203/materials in your home directory,
       you can add the following line to your .mybashrc:

           export MATERIALS_DIR_203=$HOME/cpe203/materials
       
       Remember to log out and log back in for the changes in .mybashrc
       to take effect!

       On a Linux or Mac PC, you can do something similar, though probably
       in .bashrc in your home directory on Linux or .bash_profile on Mac.  
       On Windows, you'll have to find the program for setting environment 
       variables.  You might be able to launch this by searching for 
       "environment variable" in the Windows search box.

       I recommend against using spaces in your directory names.  On Windows,
       this means you shouldn't put any of your class materials on the desktop.
       Put it somewhere simple, like c:\203.

    *  Use checkgit to verify that you created and pushed the correct
       files in turnin-XXX/setup .  You do this with a command like this:

           checkgit <your-git-name> 203 setup


You may wish to set up your local computer with a Java environment, an
editor, and the yed UML editor.  Indeed, this was of developing is more 
convenient, and it allows you to see the graphical versions of the 
programs you develop, without having to go into the lab.  To do this, 
you'll need to install some software on your computer.  We can only 
offer very limited support for setting up your computer.  Students 
typically have Linux, Mac and Windows computers, and every one is a 
little different.  Linux and Mac are easier to set up and use for 
software development; if you have a Windows computer, you might want 
to consider installing Linux.  It's a fair amount of work to do this,
but in the long term at Cal Poly, this investment in time will pay off.
Call Poly has a Linux User's Group that may be able to help.


Java Development Kit (JDK)
==========================

If you want to set up your computer, you'll need to install the Java
software development environment.  Java SE version 11 is recommended, but 
any version numbered 8 or higher should work.  Java 11 will be used to grade 
your submissions.  You can get the Java Development Kit from
https://jdk.java.net/11/ , or the commercial version from 
https://www.oracle.com/technetwork/java/javase/downloads/index.html .


The yEd Editor
==============

The yEd graph editor is free, and available from
https://www.yworks.com/products/yed .  You want the version that is
installed, and not the "yEd Live" online version.  It is written in
Java.  If needed, you can launch it from the command line, as long
as you know the path to the file yed.jar, which contains the compiled
program.  For example, if download yEd on Unix or Mac and store yed.jar 
in the directory lib in your home directory, you can type
"java ~/lib/yed.jar" to launch it.

IntelliJ IDEA IDE
=================

You may wish to have an integrated development environment available.
In this class, we recommend *against* using an IDE for primary development.
Java IDEs are not designed with beginners in mind; they have a number of
complex options and features.  Worse, they sometimes suggest code for you.
If you accept and IDE's suggestion that turns out to be wrong, it is likely
you will break your code in a way that you don't understand.

With that said, having access to an IDE might be somewhat useful if you want
to use a graphical debugger.  A good IDE for Java is IntelliJ IDEA,
available from https://www.jetbrains.com/idea/ .  The free version is fine,
or you can get a free student license for the full version.  If you choose
to experiment with an IDE in this way, you probably will spend a certain
amount of time learning to install it and configure it.

UNIX SERVER / LAB COMPUTERS
===========================

In any case, your core development environment for this class is your
account on the Unix servers and the lab computers, with the command-line
tools, a text editor, and the yed editor.  All of the tools you need
have been installed there.  

If the unix servers are heavily loaded, you might want to try to ssh 
into one of the lab computers.  Each lab computer has a label on it
giving its DNS name.  In order to log into a lab computer from outside
Cal Poly, you might need to ssh to one of the unix servers first, then
ssh from there into the lab computer.

Of course, you can clone git repositories both in your unix account,
and on your computer.  Just make sure you don't make conflicting changes 
in your turnin directory!
